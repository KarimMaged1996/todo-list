(()=>{"use strict";var e={};e.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),(()=>{var t;e.g.importScripts&&(t=e.g.location+"");var n=e.g.document;if(!t&&n&&(n.currentScript&&(t=n.currentScript.src),!t)){var o=n.getElementsByTagName("script");o.length&&(t=o[o.length-1].src)}if(!t)throw new Error("Automatic publicPath is not supported in this browser");t=t.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),e.p=t})();class t{constructor(e){this.name=e,this.todo=[]}addTodo(e){this.todo.push(e)}deleteTodo(e){for(let t of this.todo)t.title===e&&this.todo.splice(this.todo.indexOf(t),1)}completeTodo(e){for(let t of this.todo)t.title===e&&t.complete()}todoNames(){let e=[];for(let t of this.todo)e.push(t.title);return e}}class n{constructor(e,t,n,o="",d=!1){this.title=e,this.dueDate=t,this.priority=n,this.discription=o,this.isComplete=d}changeTitle(e){this.title=e}changeDate(e){this.dueDate=e}changePrioirity(e){this.priority=e}changeDiscription(e){this.discription=e}complete(){this.isComplete=!0}}const o=e.p+"ab1ee08131218da1d3b2.svg";function d(e,t){return e.find((e=>e.name===t))}const r=e.p+"2bb171d11d6384c18dfd.svg";function l(e){let t=document.createElement("h1");t.textContent=e.name;let n=document.createElement("div");n.classList.add("addNewTodo");let o=new Image;o.src=r;let d=document.createElement("div");return d.textContent="Add a todo",n.append(o,d),[t,...function(){let t=[];return e.todo.length>0&&e.todo.forEach((e=>{let n=document.createElement("div");n.classList.add("single-todo"),!0===e.isComplete&&n.classList.add("green");let o=document.createElement("button");o.textContent="X",o.classList.add("todoDelete");let d=document.createElement("div"),r=document.createElement("div");r.textContent="Title:";let l=document.createElement("div");l.textContent=e.title,d.append(r,l),d.classList.add("todoTitle");let c=document.createElement("div"),i=document.createElement("div");i.textContent="Due Date:";let a=document.createElement("div");a.textContent=e.dueDate,c.append(i,a),c.classList.add("todoDate");let s=document.createElement("div"),m=document.createElement("div");m.textContent="Priority:";let u=document.createElement("div");u.textContent=e.priority,s.append(m,u),s.classList.add("todoPriority");let p=document.createElement("button");if(p.textContent="completed",p.classList.add("todoCompleted"),""!==e.discription){let t=document.createElement("div"),r=document.createElement("div");r.textContent="Discription:";let l=document.createElement("div");l.textContent=e.discription,t.append(r,l),t.classList.add("todoDiscription"),n.append(o,d,c,s,t,p)}else n.append(o,d,c,s,p);t.push(n)})),t}(),n]}function c(e){sessionStorage.setItem("testStorage",JSON.stringify(e))}const i=[];let a=document.querySelector("#projects");if(sessionStorage.length>1){let e=JSON.parse(sessionStorage.getItem("testStorage"));for(let n of e)i.push(new t(n.name));for(let t=0;t<i.length;t++)for(let o=0;o<e[t].todo.length;o++)i[t].addTodo(new n(e[t].todo[o].title,e[t].todo[o].dueDate,e[t].todo[o].priority,e[t].todo[o].discription,e[t].todo[o].isComplete));let d=document.querySelector("#newProj");d.remove(),i.forEach((e=>{let t=document.createElement("div");t.classList.add("new-project");let n=new Image;n.src=o;let d=document.createElement("div");d.textContent=e.name,t.append(n,d),a.append(t)})),a.append(d)}document.querySelector("#newProj").addEventListener("click",(()=>{let e=function(){let e=document.querySelector("#newProj"),t=document.querySelector("#projects");e.remove();let n=function(){let e=document.createElement("div");e.classList.add("tempForm");let t=document.createElement("input");t.setAttribute("type","text");let n=document.createElement("button");n.textContent="Add";let o=document.createElement("button");return o.textContent="Cancel",e.append(t,n,o),e}();return t.append(n),[e,n]}(),n=e[1].children;n[1].addEventListener("click",(()=>{if(""!==n[0].value&&void 0===d(i,n[0].value)){let d=document.createElement("div");d.classList.add("new-project");let r=new Image;r.src=o;let l=document.createElement("div");l.textContent=n[0].value,d.append(r,l),a.append(d,e[0]),e[1].remove(),i.push(new t(n[0].value)),c(i)}else void 0!==d(i,n[0].value)?(n[0].style.border="solid 0.25vh red",n[0].value="",n[0].setAttribute("placeholder","Duplicate project name")):(n[0].style.border="solid 0.25vh red",n[0].setAttribute("placeholder","project must have a name"))})),n[2].addEventListener("click",(()=>{a.append(e[0]),e[1].remove()}))})),document.addEventListener("click",(e=>{if("new-project"===e.target.getAttribute("class")||"new-project"===e.target.parentElement.getAttribute("class")){let t;t=e.target.children.length>0?e.target.children[1].textContent:e.target.parentElement.children[1].textContent;let n=d(i,t),o=document.querySelector(".todos"),r=Array.from(o.children),c=l(n);r.forEach((e=>{e.remove()})),o.append(...c)}})),function(){let e=function(){let e=document.createElement("div");e.classList.add("todo-input");let t=document.createElement("div"),n=document.createElement("div");n.textContent="Task Name";let o=document.createElement("input");o.setAttribute("type","text"),t.append(n,o);let d=document.createElement("div"),r=document.createElement("div");r.textContent="Due Date";let l=document.createElement("input");l.setAttribute("type","date"),d.append(r,l);let c=document.createElement("div"),i=document.createElement("div");i.textContent="Priority";let a=document.createElement("select"),s=document.createElement("option");s.textContent="Low";let m=document.createElement("option");m.textContent="Medium";let u=document.createElement("option");u.textContent="High",a.append(s,m,u),c.append(i,a);let p=document.createElement("div"),h=document.createElement("div");h.textContent="Discription";let v=document.createElement("input");v.setAttribute("type","textArea"),p.append(h,v);let E=document.createElement("div"),g=document.createElement("button");g.classList.add("addTodoBtn"),g.textContent="Add";let f=document.createElement("button");return f.classList.add("cancelTodoBtn"),f.textContent="Cancel",E.append(g,f),e.append(t,d,c,p,E),e}(),t=e.children[0].children[1],o=e.children[1].children[1],r=e.children[2].children[1],a=e.children[3].children[1];document.addEventListener("click",(t=>{"addNewTodo"!==t.target.getAttribute("class")&&"addNewTodo"!==t.target.parentElement.getAttribute("class")||(document.body.append(e),document.querySelector(".addNewTodo").style.visibility="hidden")})),document.addEventListener("click",(t=>{"cancelTodoBtn"===t.target.getAttribute("class")&&(e.remove(),document.querySelector(".addNewTodo").style.visibility="visible")})),document.addEventListener("click",(s=>{if("addTodoBtn"===s.target.getAttribute("class")){let s=document.querySelector(".todos").children[0].textContent,m=d(i,s).todoNames();if(""===t.value)t.style.border="solid 0.25vh red",t.setAttribute("placeholder","this input is required");else if(m.includes(t.value))t.style.border="solid 0.25vh red",t.value="",t.setAttribute("placeholder","Duplicate Name");else if(""===o.value)o.style.border="solid 0.25vh red";else{let s=document.querySelector(".todos"),m=s.children[0].textContent,u=d(i,m);u.addTodo(new n(t.value,o.value,r.value,a.value)),c(i),Array.from(s.children).forEach((e=>{e.remove()}));let p=l(u);s.append(...p),e.remove()}}}))}(),document.addEventListener("click",(e=>{if("todoCompleted"===e.target.getAttribute("class")){e.target.parentElement.classList.add("green");let t=e.target.parentElement.children[1].children[1].textContent,n=e.target.parentElement.parentElement.children[0].textContent;d(i,n).completeTodo(t),c(i)}})),document.addEventListener("click",(e=>{if("todoDelete"===e.target.getAttribute("class")){let t=e.target.parentElement.children[1].children[1].textContent,n=e.target.parentElement.parentElement.children[0].textContent;d(i,n).deleteTodo(t),c(i),e.target.parentElement.remove()}}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,