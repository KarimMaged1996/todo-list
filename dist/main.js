(()=>{"use strict";var e={};e.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),(()=>{var t;e.g.importScripts&&(t=e.g.location+"");var n=e.g.document;if(!t&&n&&(n.currentScript&&(t=n.currentScript.src),!t)){var d=n.getElementsByTagName("script");d.length&&(t=d[d.length-1].src)}if(!t)throw new Error("Automatic publicPath is not supported in this browser");t=t.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),e.p=t})();class t{constructor(e){this.name=e,this.todo=[]}addTodo(e){this.todo.push(e)}deleteTodo(e){for(let t of this.todo)(t.title=e)&&this.todo.splice(this.todo.indexOf(t),1)}}class n{constructor(e,t,n,d="",o=!1){this.title=e,this.dueDate=t,this.priority=n,this.discription=d,this.isComplete=o}changeTitle(e){this.title=e}changeDate(e){this.dueDate=e}changePrioirity(e){this.priority=e}changeDiscription(e){this.discription=e}complete(){this.isComplete=!0}}const d=e.p+"ab1ee08131218da1d3b2.svg";function o(e,t){return e.find((e=>e.name===t))}const c=e.p+"2bb171d11d6384c18dfd.svg";function r(e){let t=document.createElement("h1");t.textContent=e.name;let n=document.createElement("div");n.classList.add("addNewTodo");let d=new Image;d.src=c;let o=document.createElement("div");return o.textContent="Add a todo",n.append(d,o),[t,...function(){let t=[];return e.todo.length>0&&e.todo.forEach((e=>{let n=document.createElement("div");n.classList.add("single-todo");let d=document.createElement("button");d.textContent="X",d.classList.add("todoDelete");let o=document.createElement("div"),c=document.createElement("div");c.textContent="Title:";let r=document.createElement("div");r.textContent=e.title,o.append(c,r),o.classList.add("todoTitle");let i=document.createElement("div"),l=document.createElement("div");l.textContent="Due Date:";let a=document.createElement("div");a.textContent=e.dueDate,i.append(l,a),i.classList.add("todoDate");let s=document.createElement("div"),u=document.createElement("div");u.textContent="Priority:";let m=document.createElement("div");m.textContent=e.priority,s.append(u,m),s.classList.add("todoPriority");let p=document.createElement("button");if(p.textContent="completed",p.classList.add("todoCompleted"),""!==e.discription){let t=document.createElement("div"),c=document.createElement("div");c.textContent="Discription:";let r=document.createElement("div");r.textContent=e.discription,t.append(c,r),t.classList.add("todoDiscription"),n.append(d,o,i,s,t,p)}else n.append(d,o,i,s,p);t.push(n)})),t}(),n]}const i=[];let l=document.querySelector("#projects");document.querySelector("#newProj").addEventListener("click",(()=>{let e=function(){let e=document.querySelector("#newProj"),t=document.querySelector("#projects");e.remove();let n=function(){let e=document.createElement("div");e.classList.add("tempForm");let t=document.createElement("input");t.setAttribute("type","text");let n=document.createElement("button");n.textContent="Add";let d=document.createElement("button");return d.textContent="Cancel",e.append(t,n,d),e}();return t.append(n),[e,n]}(),n=e[1].children;n[1].addEventListener("click",(()=>{if(""!==n[0].value&&void 0===o(i,n[0].value)){let o=document.createElement("div");o.classList.add("new-project");let c=new Image;c.src=d;let r=document.createElement("div");r.textContent=n[0].value,o.append(c,r),l.append(o,e[0]),e[1].remove(),i.push(new t(n[0].value))}else void 0!==o(i,n[0].value)?(n[0].style.border="solid 0.25vh red",n[0].value="",n[0].setAttribute("placeholder","Duplicate project name")):(n[0].style.border="solid 0.25vh red",n[0].setAttribute("placeholder","project must have a name"))})),n[2].addEventListener("click",(()=>{l.append(e[0]),e[1].remove()}))})),document.addEventListener("click",(e=>{if("new-project"===e.target.getAttribute("class")||"new-project"===e.target.parentNode.getAttribute("class")){let t;t=e.target.children.length>0?e.target.children[1].textContent:e.target.parentNode.children[1].textContent;let n=o(i,t),d=document.querySelector(".todos"),c=Array.from(d.children),l=r(n);c.forEach((e=>{e.remove()})),d.append(...l)}})),function(){let e=function(){let e=document.createElement("div");e.classList.add("todo-input");let t=document.createElement("div"),n=document.createElement("div");n.textContent="Task Name";let d=document.createElement("input");d.setAttribute("type","text"),t.append(n,d);let o=document.createElement("div"),c=document.createElement("div");c.textContent="Due Date";let r=document.createElement("input");r.setAttribute("type","date"),o.append(c,r);let i=document.createElement("div"),l=document.createElement("div");l.textContent="Priority";let a=document.createElement("select"),s=document.createElement("option");s.textContent="Low";let u=document.createElement("option");u.textContent="Medium";let m=document.createElement("option");m.textContent="High",a.append(s,u,m),i.append(l,a);let p=document.createElement("div"),v=document.createElement("div");v.textContent="Discription";let h=document.createElement("input");h.setAttribute("type","textArea"),p.append(v,h);let E=document.createElement("div"),b=document.createElement("button");b.classList.add("addTodoBtn"),b.textContent="Add";let g=document.createElement("button");return g.classList.add("cancelTodoBtn"),g.textContent="Cancel",E.append(b,g),e.append(t,o,i,p,E),e}(),t=e.children[0].children[1],d=e.children[1].children[1],c=e.children[2].children[1],l=e.children[3].children[1];document.addEventListener("click",(t=>{"addNewTodo"!==t.target.getAttribute("class")&&"addNewTodo"!==t.target.parentNode.getAttribute("class")||(document.body.append(e),document.querySelector(".addNewTodo").style.visibility="hidden")})),document.addEventListener("click",(t=>{"cancelTodoBtn"===t.target.getAttribute("class")&&(e.remove(),document.querySelector(".addNewTodo").style.visibility="visible")})),document.addEventListener("click",(a=>{if("addTodoBtn"===a.target.getAttribute("class"))if(""===t.value)t.style.border="solid 0.25vh red",t.setAttribute("placeholder","this input is required");else if(""===d.value)d.style.border="solid 0.25vh red";else{let a=document.querySelector(".todos"),s=a.children[0].textContent,u=o(i,s);u.addTodo(new n(t.value,d.value,c.value,l.value)),Array.from(a.children).forEach((e=>{e.remove()}));let m=r(u);a.append(...m),e.remove()}}))}()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,